@import './typography.css';

/* Setup global variables */
:root {
  /* Color Scheme */
  --gray-25: #fcfcfd;
  --gray-100: #d0d5dd;
  --gray-800: #1d2939;
  /* Neutral */
  --neutral-900: #101828;
  --neutral-800: #1d2939;
  --neutral-700: #101828;
  --neutral-600: #475467;
  --neutral-500: #667085;
  --neutral-400: #98a2b3;
  --neutral-300: #d0d5dd;
  --neutral-200: #eaecf0;
  --neutral-100: #f2f4f7;
  --neutral-50: #f9fafb;
  /* Primary */
  --primary-900: #1b369a;
  --primary-800: #324aa4;
  --primary-700: #495eae;
  --primary-600: #5f72b8;
  --primary-500: #7686c2;
  --primary-400: #8d9bcd;
  --primary-300: #a4afd7;
  --primary-200: #bbc3e1;
  --primary-100: #d1d7eb;
  --primary-50: #e8ebf5;
  /* Secondary */
  --secondary-900: #f9623b;
  --secondary-800: #fa724f;
  --secondary-700: #fa8162;
  --secondary-600: #fb9176;
  --secondary-500: #fba189;
  --secondary-400: #fcb19d;
  --secondary-300: #fdc0b1;
  --secondary-200: #fdd0c4;
  --secondary-100: #fee0d8;
  --secondary-50: #feefeb;
  /* Success */
  --success-900: #14532d;
  --success-800: #166534;
  --success-700: #15803d;
  --success-600: #16a34a;
  --success-500: #22c55e;
  --success-400: #4ade80;
  --success-300: #86efac;
  --success-200: #bbf7d0;
  --success-100: #dcfce7;
  --success-50: #f0fdf4;
  /* Warning */
  --warning-900: #78350f;
  --warning-800: #92400e;
  --warning-700: #b45309;
  --warning-600: #d97706;
  --warning-500: #f59e0b;
  --warning-400: #fbbf24;
  --warning-300: #fcd34d;
  --warning-200: #fde68a;
  --warning-100: #fef3c7;
  --warning-50: #fffbeb;
  /* Danger */
  --danger-900: #7f1d1d;
  --danger-800: #991b1b;
  --danger-700: #b91c1c;
  --danger-600: #dc2626;
  --danger-500: #ef4444;
  --danger-400: #f87171;
  --danger-300: #fca5a5;
  --danger-200: #fecaca;
  --danger-100: #fee2e2;
  --danger-50: #fef2f2;

  /* Other colors */

  /* Metamask */
  --metamask: #f6851b;

  /* Wallet Connect */
  --walletconnect: #3b99fc;
}

.loader-dot1,
.loader-dot2,
.loader-dot3 {
  width: 8px;
  height: 8px;
  border: solid;
  border-radius: 50%;
  margin: 3px;
}
.loader-dot1 {
  animation: jump 1.6s -0.32s linear infinite;
}
.loader-dot2 {
  animation: jump 1.6s -0.16s linear infinite;
}
.loader-dot3 {
  animation: jump 1.6s linear infinite;
}

.loader-dot1.primary,
.loader-dot2.primary,
.loader-dot3.primary {
  background-color: var(--primary-200);
  border-color: var(--primary-200);
}

.loader-dot1.secondary,
.loader-dot2.secondary,
.loader-dot3.secondary {
  background-color: var(--secondary-50);
  border-color: var(--secondary-50);
}

.loader-dot1.outlined,
.loader-dot2.outlined,
.loader-dot3.outlined {
  background-color: var(--primary-800);
  border-color: var(--primary-800);
}

.loader-dot1.disabled,
.loader-dot2.disabled,
.loader-dot3.disabled {
  background-color: var(--primary-400);
  border-color: var(--primary-400);
}

/* .loader-dot1.blank,
.loader-dot2.blank,
.loader-dot3.blank {
  background-color: var(--sha);
  border-color: var(--sha);
} */

@keyframes jump {
  0%,
  80%,
  100% {
    -webkit-transform: scale(0);
    transform: scale(0);
  }
  40% {
    -webkit-transform: scale(1.5);
    transform: scale(1.5);
  }
}

.app-toast {
  /* Toastify overrides */
  --toastify-color-light: var(--neutral-50);
  --toastify-color-dark: var(--neutral-800);
  --toastify-color-info: var(--primary-700);
  --toastify-color-success: var(--success-500);
  --toastify-color-warning: var(--warning-400);
  --toastify-color-error: var(--danger-500);
  --toastify-color-transparent: rgba(255, 255, 255, 0.7);

  --toastify-icon-color-info: var(--toastify-color-info);
  --toastify-icon-color-success: var(--toastify-color-success);
  --toastify-icon-color-warning: var(--toastify-color-warning);
  --toastify-icon-color-error: var(--toastify-color-error);

  --toastify-toast-width: 320px;
  --toastify-toast-background: #fff;
  --toastify-toast-min-height: 64px;
  --toastify-toast-max-height: 800px;
  --toastify-font-family: sans-serif;
  --toastify-z-index: 9999;

  --toastify-text-color-light: var(--neutral-500);
  --toastify-text-color-dark: var(--neutral-50);

  /* Used only for colored theme */
  --toastify-text-color-info: #fff;
  --toastify-text-color-success: #fff;
  --toastify-text-color-warning: #fff;
  --toastify-text-color-error: #fff;

  --toastify-spinner-color: var(--neutral-500);
  --toastify-spinner-color-empty-area: var(--neutral-200);

  /* Used when no type is provided */
  /* toast("**hello**") */
  --toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);
  /* Used when no type is provided */
  --toastify-color-progress-dark: var(--secondary-700);
  --toastify-color-progress-info: var(--toastify-color-info);
  --toastify-color-progress-success: var(--toastify-color-success);
  --toastify-color-progress-warning: var(--toastify-color-warning);
  --toastify-color-progress-error: var(--toastify-color-error);
}

@import url('https://fonts.googleapis.com/css2?family=Inter&family=Sora&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Global base styles */
@layer base {
  /* Button component */
  /* Defaults to primary */
  button {
    @apply rounded-lg inline-block text-base py-2 px-5 bg-neutral-100 border border-transparent;
  }

  button,
  a {
    @apply transition-all transform;
  }

  /* Experimental hover states */
  /* a:hover:not(:disabled),
  a:focus-visible:not(:disabled),
  button:hover:not(:disabled),
  button:focus-visible:not(:disabled) {
    box-shadow:
    0 0 6px 3px #fff,
    0 0 10px 6px #f0f,
    0 0 14px 9px #0ff;
  } */

  button.primary {
    @apply bg-primary-900 text-white;
  }
  button.primary:hover,
  button.primary:focus-visible {
    @apply bg-primary-900;
  }

  /* Other button styles */
  button.secondary {
    @apply bg-secondary-900 text-white;
  }
  button.secondary:hover,
  button.secondary:focus-visible {
    @apply bg-secondary-900;
  }
  button.success {
    @apply bg-success-500 text-white;
  }
  button.success:hover,
  button.success:focus-visible {
    @apply bg-success-500;
  }
  button.warning {
    @apply bg-warning-500 text-white;
  }
  button.warning:hover,
  button.warning:focus-visible {
    @apply bg-warning-500;
  }
  button.danger {
    @apply bg-danger-500 text-white;
  }
  button.danger:hover,
  button.danger:focus-visible {
    @apply bg-danger-500;
  }

  button.black {
    @apply bg-black text-white;
  }
  button.black:hover,
  button.black:focus-visible {
    @apply bg-black;
  }

  button.line {
    @apply bg-white border-2 border-neutral-300 text-neutral-600;
  }
  button.line.primary {
    @apply border-primary-900 text-primary-900;
  }
  button.line.secondary {
    @apply border-secondary-900 text-secondary-900;
  }
  button.line.success {
    @apply border-success-500 text-success-500;
  }
  button.line.warning {
    @apply border-warning-500 text-warning-500;
  }
  button.line.danger {
    @apply border-danger-500 text-danger-500;
  }
  button.line.black {
    @apply border-black text-black;
  }
  button.line:not(.primary, .secondary, .success, .danger, .warning, .black):hover,
  button.line:not(.primary, .secondary, .success, .danger, .warning, .black):focus-visible {
    @apply bg-neutral-300;
  }
  button.line:is(.primary, .secondary, .success, .danger, .warning, .black):hover,
  button.line:is(.primary, .secondary, .success, .danger, .warning, .black):focus-visible {
    @apply text-white;
  }

  button.small {
    @apply py-0.5 px-3 text-sm;
  }
  button.large {
    @apply py-3 py-6 text-lg;
  }

  button[disabled]:not(.wallet-button):not(.loading),
  button:disabled:not(.wallet-button):not(.loading) {
    @apply bg-primary-50 border border-primary-400 text-primary-300;
  }

  /* Typography */
  .display,
  h1,
  .h1,
  h2,
  .h2,
  h3,
  .h3,
  h4,
  .h4,
  h5,
  .h5,
  h6,
  .h6,
  .sora {
    font-family: 'Sora', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  }
  .display {
    @apply text-5xl leading-relaxed;
  }
  h1,
  .h1 {
    @apply text-h1 leading-relaxed;
  }
  h2,
  .h2 {
    @apply text-h2 leading-relaxed;
  }
  h3,
  .h3 {
    @apply text-h3 leading-relaxed;
  }
  h4,
  .h4 {
    @apply text-h4 leading-relaxed;
  }
  h5,
  .h5 {
    @apply text-h5 leading-relaxed;
  }
  h6,
  .h6 {
    @apply text-h6 leading-relaxed;
  }
  /* For paragraphs just use text-sm text-lg and text-base */

  /* Form controls */
  label {
    @apply flex flex-col w-full;
  }

  label > span,
  label .label,
  .form-label {
    @apply font-medium text-sm text-neutral-800 inline-flex gap-1 self-start mb-1.5 relative;
  }

  label.required > span:after,
  label.required .label:after,
  .form-label.required:after {
    content: '*';
    @apply text-secondary-900;
  }

  /* HTML's input element -- that is not a radio and range type -- style overrides */
  label > div > input:not([type='radio']):not([type='range']):not(.minMaxInput input),
  /* HTML's default select element style overrides */
  label > div > select,
  /* special radiobuttons style overrides */
  .radioButton,
  /* react-select's Select and Creatable overrides */
  .select__control,
  /* custom input component */
  .input-component__input,
  /* Ant date or time picker override */
  .ant-picker {
    @apply flex items-center gap-2 relative border rounded-3xl py-1.5 px-6 h-12 bg-neutral-50 w-full border-neutral-300 text-sm text-neutral-700 shadow-sm transition-all !important;
  }

  /* Alternate variant for the select input */
  label > div > select.alt {
    @apply border-none bg-transparent shadow-none text-xs text-primary-900 p-3 h-auto !important;
  }

  /* Other disabled styles */
  :disabled:not(fieldset):not(.card-radio),
  [disabled]:not(fieldset):not(.card-radio) {
    @apply opacity-80;
  }

  :disabled input[type='radio'],
  :disabled input[type='checkbox'],
  [disabled] input[type='radio'],
  [disabled] input[type='checkbox'] {
    @apply opacity-0;
  }

  /* Input disabled styles */
  .input-component__input:has(:disabled),
  .input-component__input:has([disabled]),
  .minMaxInput:has(:disabled),
  .minMaxInput:has([disabled]),
  select:disabled,
  select[disabled],
  .barRadio:has(:disabled),
  .barRadio:has([disabled]) {
    @apply border-gray-500 bg-gray-100 text-gray-400;
  }

  label > div > input:focus,
  label > div > input:focus-visible,
  label > div > select:focus,
  label > div > select:focus-visible {
    @apply border-primary-400;
  }

  /* Check if this affects other form control components */
  .input-component__container,
  /* Form and form control styles for error and success states */
  .form {
    @apply rounded-xl border border-transparent overflow-hidden transition-all duration-500;
  }

  .form {
    @apply p-1 rounded-3xl border border-gray-300;
  }

  .input-component__container.error,
  .form-error {
    @apply p-1 bg-danger-100 border-danger-500;
  }

  .form-error .form-message {
    @apply text-danger-700;
  }

  .input-component__container.success,
  .form-success {
    @apply p-1 bg-success-100 border-success-200 text-success-600;
  }

  .input-component__container.success {
    animation: fadeOutContainer 1s;
    animation-delay: 2s;
    animation-fill-mode: forwards;
  }

  .form-success .form-message {
    @apply text-success-600;
  }
  .form-success {
    animation: fadeOutFormContainer 1s;
    animation-delay: 2s;
    animation-fill-mode: forwards;
  }

  .form > fieldset {
    @apply bg-white p-6 rounded-3xl w-full;
  }

  .form > fieldset.no-padding {
    @apply p-0;
  }

  label > div.error > input,
  label > div.success > input {
    @apply rounded-lg border-neutral-50;
  }

  label > div.success > input {
    animation: fadeOutInputStyles 1s;
    animation-delay: 2s;
    animation-fill-mode: forwards;
  }

  label > div > p {
    @apply text-xs mt-1 px-1 pb-1 h-5 overflow-hidden transition-all;
  }

  label > div.success > p,
  .form-success .form-message {
    animation: fadeOutMessage 1s;
    animation-delay: 1.5s;
    animation-fill-mode: forwards;
  }

  /* animation for success states on form input */
  @keyframes fadeOutFormContainer {
    to {
      @apply border border-gray-300 bg-white;
    }
  }
  @keyframes fadeOutContainer {
    to {
      @apply border-transparent bg-transparent text-white;
    }
  }
  @keyframes fadeOutInputStyles {
    to {
      @apply rounded-3xl border-neutral-300;
    }
  }
  @keyframes fadeOutMessage {
    to {
      @apply opacity-0 h-0 mt-0 pb-0 pt-0;
    }
  }

  /* MinMax component styles */
  .minMaxInput input {
    @apply bg-transparent;
  }
  .minMaxInput input:focus,
  .minMaxInput input:focus-visible {
    @apply outline-none;
  }
  .minMaxInput:has(input:focus),
  .minMaxInput:has(input:focus-visible) {
    @apply border-primary-400;
  }

  /* Contents */
  .panel {
    @apply p-6 rounded-3xl border border-gray-300 overflow-hidden;
  }

  /* Table default styling */
  table {
    @apply w-full whitespace-nowrap;
  }
  table thead {
    @apply bg-neutral-100;
  }
  table thead th {
    @apply text-left text-xs font-medium text-neutral-500;
  }
  table tr {
    @apply border-b border-gray-200;
  }
  table tbody tr td {
    @apply text-left text-xs text-neutral-900;
  }
  table thead th,
  table tbody tr td {
    @apply py-3.5 px-6;
  }
  table thead th:not(:first-child),
  table tbody tr td:not(:first-child) {
    @apply border-l border-gray-200;
  }

  table tbody tr:last-child {
    @apply border-b-0;
  }

  /* Markdown content styles -- due to Tailwind resetting all element styles, we need to add styling for these. */
  .markdown-content p {
    @apply my-4;
  }
  .markdown-content h1 {
    @apply my-6 font-semibold;
  }
  .markdown-content h2 {
    @apply my-5 font-semibold;
  }

  /* Recharts override */
  .recharts-cartesian-axis-tick-value {
    @apply text-xs text-neutral-800;
  }
}

@layer components {
  /* Input component styles */
  .input-component input,
  .input-component input:focus,
  .input-component input:focus-visible {
    @apply outline-none;
  }

  .input-component__input {
    @apply px-4;
  }
  .input-component__input:has(input:focus),
  .input-component__input:has(input:focus-visible) {
    @apply border-primary-700;
  }

  .input-component__container.error .input-component__input,
  .input-component__container.success .input-component__input {
    @apply rounded-lg;
  }
  .input-component__container.success .input-component__input {
    animation: fadeOutInputStyles 1s;
    animation-delay: 2s;
    animation-fill-mode: forwards;
  }

  .input-component .error .input-component__message {
    @apply text-danger-700;
  }
  .input-component .success .input-component__message {
    @apply text-success-700;
  }

  /* Avatar component style */
  .avatar,
  .avatar .text {
    @apply inline-flex items-center justify-center h-16 w-16 rounded-full relative overflow-hidden;
  }

  .avatar.default,
  .avatar .text {
    @apply h-11 w-11;
  }

  .avatar.small,
  .avatar .text {
    @apply h-6 w-6;
  }

  .avatar.initials {
    @apply bg-gray-300 text-gray-400 text-xl;
  }
  .avatar.initials.small {
    @apply text-xs;
  }
  .avatar.initials.default {
    @apply text-lg;
  }

  /* Select, react-select, creatable select via react-select overrides */
  .select__control {
    min-height: 2.5rem;
    @apply py-2 h-auto rounded-3xl !important;
  }
  .select__control--is-focused {
    box-shadow: 0 0 0 1px var(--primary-400) !important;
    @apply border-primary-400 !important;
  }

  .select__input-container,
  .select__multi-value {
    @apply my-0 !important;
  }
  .select__multi-value {
    @apply rounded-2xl overflow-hidden m-0 !important;
  }
  .select__multi-value__label {
    @apply pl-2.5 !important;
  }
  .select__menu {
    @apply static rounded-xl overflow-hidden !important;
  }
  .select__indicator {
    @apply py-0 pr-1 pl-2 !important;
  }

  /* Progress bar customization */
  /* Mozilla browser */
  /* progress, */
  /* Other browsers */
  progress::-webkit-progress-bar {
    padding: 4px;
    background: var(--neutral-100);
    border: 1px solid var(--neutral-300);
    border-radius: 48px;
    height: 18px;
    box-sizing: border-box;
  }
  /* Other browsers */
  progress::-webkit-progress-value {
    /* Mozilla browser */
    /* progress::-moz-progress-bar { */
    height: 8px;
    border-radius: 48px;
    border: 1px solid var(--primary-900);
    background: var(--primary-900);
    background: linear-gradient(90deg, rgba(27, 54, 154, 1) 0%, rgba(70, 98, 203, 1) 50%, rgba(98, 122, 207, 1) 100%);
  }
}

@layer utilities {
  /* Since much of layouts are based on this */
  .col-stretch {
    @apply flex flex-col items-stretch gap-2;
  }
  .col-right {
    @apply flex flex-col items-end gap-2;
  }
  .row-center {
    @apply flex flex-row items-center gap-2;
  }
  /* Paragraph styles */
  .paragraphy-large-bold {
    @apply text-lg font-bold;
  }
  .paragraphy-large-semibold {
    @apply text-lg font-semibold;
  }
  .paragraphy-large-medium {
    @apply text-lg font-medium;
  }
  .paragraphy-large {
    @apply text-lg font-normal;
  }
  .paragraphy-medium-bold {
    @apply text-base font-bold;
  }
  .paragraphy-medium-semibold {
    @apply text-base font-semibold;
  }
  .paragraphy-medium-medium {
    @apply text-base font-medium;
  }
  .paragraphy-medium {
    @apply text-base font-normal;
  }
  .paragraphy-small-bold {
    @apply text-sm font-bold;
  }
  .paragraphy-small-semibold {
    @apply text-sm font-semibold;
  }
  .paragraphy-small-medium {
    @apply text-sm font-medium;
  }
  .paragraphy-small {
    @apply text-sm font-normal;
  }
  .paragraphy-tiny-bold {
    @apply text-xs font-bold;
  }
  .paragraphy-tiny-semibold {
    @apply text-xs font-semibold;
  }
  .paragraphy-tiny-medium {
    @apply text-xs font-medium;
  }
  .paragraphy-tiny {
    @apply text-xs font-normal;
  }
  .neutral-text {
    @apply text-neutral-500;
  }
  .dark-text {
    @apply text-neutral-900;
  }
}

html {
  scroll-behavior: smooth;
}

*,
html,
.inter {
  font-family: 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

/* Show the hint content when hovered */
.hint-content {
  display: none;
}
.hint:hover .hint-content,
.hint:focus .hint-content,
.hint:focus-visible .hint-content {
  display: block;
}

body {
  overflow-x: hidden;
}

/* MUI and Ant design Date and time picker overrides */
.MuiFormControl-root,
.ant-picker {
  width: 100%;
  height: 48px;
}
.MuiOutlinedInput-root,
.ant-picker {
  border-radius: 9999px !important;
  padding-right: 1.5rem !important;
  background-color: var(--neutral-50) !important;
}
.MuiOutlinedInput-root input,
.ant-picker {
  padding: 0.78125rem 1.5rem;
  padding-right: 0;
  font-size: 14px;
}

.ant-picker-input {
  position: relative;
  display: inline-flex;
  align-items: center;
  width: 100%;
}

.ant-picker-input > input {
  position: relative;
  display: inline-block;
  width: 100%;
  min-width: 1px;
  padding: 0;
  color: rgba(0, 0, 0, 0.88);
  font-size: 14px;
  line-height: 1.5714285714285714;
  background-color: #ffffff;
  background-image: none;
  border-width: 1px;
  border-style: solid;
  border-color: #d9d9d9;
  border-radius: 6px;
  transition: all 0.2s;
  flex: auto;
  height: auto;
  background: transparent;
  border: 0;
}

.ant-picker-suffix {
  display: flex;
  flex: none;
  align-self: center;
  margin-inline-start: 4px;
  color: rgba(0, 0, 0, 0.25);
  line-height: 1;
  pointer-events: none;
}

.ant-picker-clear {
  position: absolute;
  top: 50%;
  inset-inline-end: 0;
  color: rgba(0, 0, 0, 0.25);
  line-height: 1;
  background: #ffffff;
  transform: translateY(-50%);
  cursor: pointer;
  opacity: 0;
  transition: opacity 0.2s, color 0.2s;
}

.Mui-selected {
  background-color: var(--primary-900) !important;
}

/* Recharts override */
.recharts-cartesian-axis-tick-value {
  font-size: 12px;
  color: var(--neutral-800);
}

/* Select from react-select style overrides */
.select__control {
  padding-right: 10px !important;
}
.select__value-container {
  padding: 0 !important;
  gap: 4px;
}

.select__menu {
  padding: 0.125rem 0.375rem !important;
  border-radius: 0.75rem !important;
}

.select__option {
  color: var(--neutral-600) !important;
  font-size: 1rem !important;
  border-radius: 0.5rem !important;
}

.select__option:not(:first-child) {
  margin-top: 0.5rem !important;
}

.select__option--is-focused,
.select__option--is-selected {
  color: var(--primary-700) !important;
  background-color: var(--primary-50) !important;
}

.underline-offset-3 {
  text-underline-offset: 3px;
  /* react-toastify overrides */
}
.Toastify__toast-container {
  max-width: 480px;
  min-width: 320px;
  width: auto;
}
